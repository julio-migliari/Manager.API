// <auto-generated />
using System;
using Manager.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Manager.Persistence.Migrations
{
    [DbContext(typeof(ManagerDBContext))]
    [Migration("20210619120107_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Manager.Core.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnderecoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetodoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdutoForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("TamanhoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendedorForeignKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoForeignKey");

                    b.HasIndex("VendedorForeignKey");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Manager.Core.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamanho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendedorForeignKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendedorForeignKey");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Manager.Core.Entities.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("Manager.Core.Entities.Pedido", b =>
                {
                    b.HasOne("Manager.Core.Entities.Produto", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ProdutoForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Manager.Core.Entities.Vendedor", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("VendedorForeignKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Manager.Core.Entities.Produto", b =>
                {
                    b.HasOne("Manager.Core.Entities.Vendedor", null)
                        .WithMany("Produtos")
                        .HasForeignKey("VendedorForeignKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Manager.Core.Entities.Produto", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Manager.Core.Entities.Vendedor", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
